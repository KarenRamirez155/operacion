/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallerpunto1;

import javax.swing.JOptionPane;

/**
 *
 * @author KAREN RAMIREZ
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }
int dimension;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        matrizSuma = new javax.swing.JButton();
        matrizResta = new javax.swing.JButton();
        matrizTraza = new javax.swing.JButton();
        matrizDeterminante = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel6.setText("Elije la operación que deseas realizar");

        matrizSuma.setBackground(new java.awt.Color(0, 153, 153));
        matrizSuma.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        matrizSuma.setForeground(new java.awt.Color(51, 51, 51));
        matrizSuma.setText("Suma");
        matrizSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizSumaActionPerformed(evt);
            }
        });

        matrizResta.setBackground(new java.awt.Color(0, 153, 153));
        matrizResta.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        matrizResta.setForeground(new java.awt.Color(51, 51, 51));
        matrizResta.setText("Resta");
        matrizResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizRestaActionPerformed(evt);
            }
        });

        matrizTraza.setBackground(new java.awt.Color(0, 153, 153));
        matrizTraza.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        matrizTraza.setForeground(new java.awt.Color(51, 51, 51));
        matrizTraza.setText("Traza");
        matrizTraza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizTrazaActionPerformed(evt);
            }
        });

        matrizDeterminante.setBackground(new java.awt.Color(0, 153, 153));
        matrizDeterminante.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        matrizDeterminante.setForeground(new java.awt.Color(51, 51, 51));
        matrizDeterminante.setText("Determinante");
        matrizDeterminante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizDeterminanteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Calculadora de Matrices n x n");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(87, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(matrizSuma, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(matrizTraza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(matrizResta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(matrizDeterminante, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matrizSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matrizResta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matrizTraza, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matrizDeterminante, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void matrizSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizSumaActionPerformed
  
    dimension = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matrices"));

        int matriz1[][] = new int[dimension][dimension];
        int matriz2[][] = new int[dimension][dimension];
        int matriz3[][] = new int[dimension][dimension];

        if (dimension > 1) {
            JOptionPane.showMessageDialog(null, "Llenar las matrices");

            JOptionPane.showMessageDialog(null, "Primera matriz");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "Segunda matriz");
            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {

                    matriz2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }
/*
            JOptionPane.showMessageDialog(null, "sumando matrices...");
            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    matriz3[i][j] = matriz1[i][j] + matriz2[i][j];
                }
            }
*/
            JOptionPane.showMessageDialog(null, "resultado:");
            String s = "";

            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    s += matriz3[i][j];
                    s += " ";

                }
                s += "\n";
            }
            JOptionPane.showMessageDialog(null, s);
        }
    
    //GEN-LAST:event_sumarMatrizActionPerformed
    }//GEN-LAST:event_matrizSumaActionPerformed

    private void matrizRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizRestaActionPerformed
        dimension = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matrices"));

        int matriz1[][] = new int[dimension][dimension];
        int matriz2[][] = new int[dimension][dimension];
        int matriz3[][] = new int[dimension][dimension];

        if (dimension > 1) {

            JOptionPane.showMessageDialog(null, "Llenar las matrices");

            JOptionPane.showMessageDialog(null, "Matriz 1");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "Matriz 2");
            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {

                    matriz2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "restando matrices");
            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    matriz3[i][j] = matriz1[i][j] - matriz2[i][j];
                }
            }

            JOptionPane.showMessageDialog(null, "resultado:");
            String s = "";

            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    s += matriz3[i][j];
                    s += " ";

                }
                s += "\n";
            }
            JOptionPane.showMessageDialog(null, s);
        }
    }//GEN-LAST:event_matrizRestaActionPerformed

    private void matrizTrazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizTrazaActionPerformed
        dimension = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matriz"));

        int matriz1[][] = new int[dimension][dimension];
        int matriz2[][] = new int[dimension][dimension];

        if (dimension > 1) {
            JOptionPane.showMessageDialog(null, "Llenar la matriz");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "trazando matrz");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {
                    if (i == j) {
                        matriz2[i][j] = matriz1[i][j];
                    }
                }
            }

            JOptionPane.showMessageDialog(null, "Resultado:");
            String s = "";

            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {
                    if (i == j) {
                        s += matriz2[i][j];
                        s += "";
                    }
                }
                s += "+";
            }
            JOptionPane.showMessageDialog(null, "T = La suma de " + s);
        }
    //GEN-LAST:event_trazarMatrizActionPerformed

    }//GEN-LAST:event_matrizTrazaActionPerformed

    private void matrizDeterminanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizDeterminanteActionPerformed
            dimension = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matriz"));

        int mat1[][] = new int[dimension][dimension];
        int dA = 0, dB = 0, dC = 0, dD = 0, res = 0;
   
        if (dimension == 2) {
            JOptionPane.showMessageDialog(null, "Llene la matriz");
            for (int i = 0; i < mat1.length; i++) {
                for (int j = 0; j < mat1.length; j++) {

                    mat1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "obteniendo determinante....");
            for (int i = 0; i < mat1.length; i++) {
                for (int j = 0; j < mat1.length; j++) {
                    if (i == 0 && j== 0) {
                        dA += mat1[i][j];
                    }else if ( i == 0 && j == 1){
                        dC += mat1[i][j];
                    }else if ( i == 1 && j == 0){
                        dD += mat1[i][j];
                    }else if ( i == 1 && j == 1){
                        dB += mat1[i][j];
                    }
                }
            }
            
            JOptionPane.showMessageDialog(null, "Resultado = "+dA+"\t"+dB+"-\t"+dC+"\t"+dD);
            res = (dA*dB)-(dC*dD);
            JOptionPane.showMessageDialog(null, res);
        }
    }//GEN-LAST:event_matrizDeterminanteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton matrizDeterminante;
    private javax.swing.JButton matrizResta;
    private javax.swing.JButton matrizSuma;
    private javax.swing.JButton matrizTraza;
    // End of variables declaration//GEN-END:variables
}
